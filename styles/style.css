*{
  margin: 0;
  padding: 0;
  box-sizing: border-box;
}

html,
body {
  overflow-x: clip;
  font-family: "nssans";
  transition: background-color 0.3s, color 0.3s;
  background-repeat: no-repeat;
  background-image: linear-gradient(to bottom, var(--secundaire-color) 500px , var(--toggle-bg) 0);
  color: var(--text-color);
  scroll-behavior: smooth;
}

:root {
  --text-color: #000; /* Dark mode kleur */
  --bg-color: #fff;
  --secundaire-color: #ffc700;
  --main-color: #003082;
  --nav-bg:#fff;
  --toggle-bg: #ddd;
  --toggle-circle: #fff;
  --nav-text-color:#000;
}

html:has(#darkmode:checked) {
  /* Wanneer de label met id darkmode is gechecked dan gaan deze kleuren in, daarom zijn ze dezelfde naam. */
  /* Dark mode kleur */
  --text-color: #fff;
  --bg-color: #000;
  --toggle-bg: #333;
  --toggle-circle: #ff0;
  --secundaire-color: #003082;
}

#darkmode {
  display: none;
}

nav {
  display: flex;
  justify-content: space-between;
  align-items: center;
  background: var(--nav-bg);
  padding: 2em;
  color: black;
  box-shadow: rgba(14, 63, 126, 0.06) 0px 0px 0px 1px, rgba(42, 51, 70, 0.03) 0px 1px 1px -0.5px, rgba(42, 51, 70, 0.04) 0px 2px 2px -1px, rgba(42, 51, 70, 0.04) 0px 3px 3px -1.5px, rgba(42, 51, 70, 0.03) 0px 5px 5px -2.5px, rgba(42, 51, 70, 0.03) 0px 10px 10px -5px, rgba(42, 51, 70, 0.03) 0px 24px 24px -8px;;

  svg{
    fill: #003082;
    height: auto;
    width: 100px;
  }
  svg:hover{
    fill: #ffc700;
    cursor: pointer;
  }

  p {
    font-size: 18px;
  }

  /* Toggle button styling */
.toggle {
  width: 50px;
  height: 25px;
  background: var(--toggle-bg);
  display: block;
  border-radius: 25px;
  position: relative;
  cursor: pointer;
}

.toggle::after {
  content: "";
  width: 20px;
  height: 20px;
  background: var(--toggle-circle);
  position: absolute;
  top: 2.5px;
  left: 3px;
  border-radius: 50%;
  transition: 0.3s;
}

  /* Positie aanpassen in dark mode */
  &:has(input:checked) .toggle::after {
    left: 27px;
}

  input {
    display: none;
  }

}
form{
  width: 100%;
  display: flex;
  flex-direction: column;
  align-items: center;
}


main > fieldset{
  background-color: var(--bg-color);
  padding: 2em;
  border-radius: 1em;
}

main{
  display: flex;
  flex-direction: column;
  align-items: center;
  justify-content: center;
  position: relative;
  padding: 1em;
  gap: 2em;

  aside{
    position: absolute;
    left: 0;
    top: 2em;
    width: max-content;
    height: 100%;

    ul{
      position: sticky;
      top: 0;
      left: 0;
    }
  }

  
}

ul{
  list-style: none;
}
fieldset{
  border: none;
  padding: 1rem 1rem 1rem 0;

}
.Gegevens-overledene {
  display: flex;
  flex-direction: column;
  gap: 1rem;

  form > fieldset > legend{
    background-color: #003082;
    padding: .5rem;
    border-radius: 50%;
    color: white;
  }

  fieldset:nth-of-type(1){

    ul{
      display: flex;
      flex-direction: column;
      gap: 1rem;
    }
    li:first-of-type{
      grid-column: 1/2;
      display: flex;
      gap: 1rem;
    }

    label{
      display: flex;
      flex-direction: column;
    }

    li:nth-of-type(2) label{
      display: flex;
      flex-direction: row;
      gap: 1rem;
    }

    li:last-of-type{
      display: flex;
      gap: 1rem;
      label{
        flex-direction: row;
        gap: 1em;
        text-align: center;
      }
    }
    }
  
  
  
      fieldset:nth-of-type(2){
      display: flex;
      flex-direction: column;
      gap: 1rem;
      
      &:has(#nee1:checked) > fieldset:nth-of-type(n + 2){
        display: none;
        pointer-events: none;
      }

      fieldset:nth-of-type(2) label:last-of-type{
        display: none;
      }

      &:has(#ja-1b-2:checked) > fieldset:nth-of-type(2) label:last-of-type{
        display: block;
      }

      > fieldset legend{
        font-weight: bold;
      }
    }
  }




#voornaam:user-invalid{
  border: none;
  padding: 1em;
  border-left: red solid 5px !important;
}


.gegevens-gemachtigde form fieldset:has(input:not(:placeholder-shown)) label:has(input:placeholder-shown) {
  display: none;
}

aside li{
  display: none;
}

[id^="page-"] {
  display: block;
}

@supports selector(:target) {
  [id^="page-"] {
    display: none;
  }

  [id^="page-"]:target {
    display: block;
  }

  /* credit: Vivanne */
  body:not(:has([id^=page-]:target)) #page-one {
    display: grid;
  }

  main:has(#page-two:target) #page-one{
  display: none;
}

main:has(#page-two:target) aside li:first-of-type {
  display: block;
}

main:has(#page-three:target) aside li:nth-of-type(2) {
  display: block;
}
}
